/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetStatsEventsEventKeyRequest = {
  /**
   * The unique key of the event.
   */
  eventKey: string;
};

/** @internal */
export const GetStatsEventsEventKeyRequest$inboundSchema: z.ZodType<
  GetStatsEventsEventKeyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  eventKey: z.string(),
});

/** @internal */
export type GetStatsEventsEventKeyRequest$Outbound = {
  eventKey: string;
};

/** @internal */
export const GetStatsEventsEventKeyRequest$outboundSchema: z.ZodType<
  GetStatsEventsEventKeyRequest$Outbound,
  z.ZodTypeDef,
  GetStatsEventsEventKeyRequest
> = z.object({
  eventKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetStatsEventsEventKeyRequest$ {
  /** @deprecated use `GetStatsEventsEventKeyRequest$inboundSchema` instead. */
  export const inboundSchema = GetStatsEventsEventKeyRequest$inboundSchema;
  /** @deprecated use `GetStatsEventsEventKeyRequest$outboundSchema` instead. */
  export const outboundSchema = GetStatsEventsEventKeyRequest$outboundSchema;
  /** @deprecated use `GetStatsEventsEventKeyRequest$Outbound` instead. */
  export type Outbound = GetStatsEventsEventKeyRequest$Outbound;
}

export function getStatsEventsEventKeyRequestToJSON(
  getStatsEventsEventKeyRequest: GetStatsEventsEventKeyRequest,
): string {
  return JSON.stringify(
    GetStatsEventsEventKeyRequest$outboundSchema.parse(
      getStatsEventsEventKeyRequest,
    ),
  );
}

export function getStatsEventsEventKeyRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetStatsEventsEventKeyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetStatsEventsEventKeyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetStatsEventsEventKeyRequest' from JSON`,
  );
}
