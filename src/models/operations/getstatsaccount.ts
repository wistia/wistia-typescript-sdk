/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const GetStatsAccountServerList = [
  "https://api.wistia.com/v1",
] as const;

/**
 * Successful operation. Account stats retrieved.
 */
export type GetStatsAccountResponse = {
  /**
   * The total number of times all of the videos from this account have been loaded.
   */
  loadCount: number;
  /**
   * The total number of times all of the videos from this account have been played.
   */
  playCount: number;
  /**
   * The total amount of time spent watching all of the videos in this account.
   */
  hoursWatched: number;
};

/** @internal */
export const GetStatsAccountResponse$inboundSchema: z.ZodType<
  GetStatsAccountResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  load_count: z.number().int(),
  play_count: z.number().int(),
  hours_watched: z.number(),
}).transform((v) => {
  return remap$(v, {
    "load_count": "loadCount",
    "play_count": "playCount",
    "hours_watched": "hoursWatched",
  });
});

/** @internal */
export type GetStatsAccountResponse$Outbound = {
  load_count: number;
  play_count: number;
  hours_watched: number;
};

/** @internal */
export const GetStatsAccountResponse$outboundSchema: z.ZodType<
  GetStatsAccountResponse$Outbound,
  z.ZodTypeDef,
  GetStatsAccountResponse
> = z.object({
  loadCount: z.number().int(),
  playCount: z.number().int(),
  hoursWatched: z.number(),
}).transform((v) => {
  return remap$(v, {
    loadCount: "load_count",
    playCount: "play_count",
    hoursWatched: "hours_watched",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetStatsAccountResponse$ {
  /** @deprecated use `GetStatsAccountResponse$inboundSchema` instead. */
  export const inboundSchema = GetStatsAccountResponse$inboundSchema;
  /** @deprecated use `GetStatsAccountResponse$outboundSchema` instead. */
  export const outboundSchema = GetStatsAccountResponse$outboundSchema;
  /** @deprecated use `GetStatsAccountResponse$Outbound` instead. */
  export type Outbound = GetStatsAccountResponse$Outbound;
}

export function getStatsAccountResponseToJSON(
  getStatsAccountResponse: GetStatsAccountResponse,
): string {
  return JSON.stringify(
    GetStatsAccountResponse$outboundSchema.parse(getStatsAccountResponse),
  );
}

export function getStatsAccountResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetStatsAccountResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetStatsAccountResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetStatsAccountResponse' from JSON`,
  );
}
