/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const DeleteTagsNameServerList = [
  "https://api.wistia.com/v1",
] as const;

export type DeleteTagsNameRequest = {
  /**
   * Tag ID
   */
  name: string;
};

/** @internal */
export const DeleteTagsNameRequest$inboundSchema: z.ZodType<
  DeleteTagsNameRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type DeleteTagsNameRequest$Outbound = {
  name: string;
};

/** @internal */
export const DeleteTagsNameRequest$outboundSchema: z.ZodType<
  DeleteTagsNameRequest$Outbound,
  z.ZodTypeDef,
  DeleteTagsNameRequest
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteTagsNameRequest$ {
  /** @deprecated use `DeleteTagsNameRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteTagsNameRequest$inboundSchema;
  /** @deprecated use `DeleteTagsNameRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteTagsNameRequest$outboundSchema;
  /** @deprecated use `DeleteTagsNameRequest$Outbound` instead. */
  export type Outbound = DeleteTagsNameRequest$Outbound;
}

export function deleteTagsNameRequestToJSON(
  deleteTagsNameRequest: DeleteTagsNameRequest,
): string {
  return JSON.stringify(
    DeleteTagsNameRequest$outboundSchema.parse(deleteTagsNameRequest),
  );
}

export function deleteTagsNameRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteTagsNameRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteTagsNameRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteTagsNameRequest' from JSON`,
  );
}
