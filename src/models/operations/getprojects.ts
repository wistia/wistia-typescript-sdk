/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Ordering
 */
export const GetProjectsSortBy = {
  Name: "name",
  Created: "created",
  Updated: "updated",
  MediaCount: "mediaCount",
  Id: "id",
} as const;
/**
 * Ordering
 */
export type GetProjectsSortBy = ClosedEnum<typeof GetProjectsSortBy>;

/**
 * Ordering Sort Direction (0 = desc, 1 = asc; default is 1)
 */
export const GetProjectsSortDirection = {
  Zero: 0,
  One: 1,
} as const;
/**
 * Ordering Sort Direction (0 = desc, 1 = asc; default is 1)
 */
export type GetProjectsSortDirection = ClosedEnum<
  typeof GetProjectsSortDirection
>;

export type GetProjectsRequest = {
  /**
   * Page number to retrieve
   */
  page?: number | undefined;
  /**
   * Number of projects per page
   */
  perPage?: number | undefined;
  /**
   * Ordering
   */
  sortBy?: GetProjectsSortBy | undefined;
  /**
   * Ordering Sort Direction (0 = desc, 1 = asc; default is 1)
   */
  sortDirection?: GetProjectsSortDirection | undefined;
};

/** @internal */
export const GetProjectsSortBy$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectsSortBy
> = z.nativeEnum(GetProjectsSortBy);

/** @internal */
export const GetProjectsSortBy$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectsSortBy
> = GetProjectsSortBy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectsSortBy$ {
  /** @deprecated use `GetProjectsSortBy$inboundSchema` instead. */
  export const inboundSchema = GetProjectsSortBy$inboundSchema;
  /** @deprecated use `GetProjectsSortBy$outboundSchema` instead. */
  export const outboundSchema = GetProjectsSortBy$outboundSchema;
}

/** @internal */
export const GetProjectsSortDirection$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectsSortDirection
> = z.nativeEnum(GetProjectsSortDirection);

/** @internal */
export const GetProjectsSortDirection$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectsSortDirection
> = GetProjectsSortDirection$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectsSortDirection$ {
  /** @deprecated use `GetProjectsSortDirection$inboundSchema` instead. */
  export const inboundSchema = GetProjectsSortDirection$inboundSchema;
  /** @deprecated use `GetProjectsSortDirection$outboundSchema` instead. */
  export const outboundSchema = GetProjectsSortDirection$outboundSchema;
}

/** @internal */
export const GetProjectsRequest$inboundSchema: z.ZodType<
  GetProjectsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.number().int().optional(),
  per_page: z.number().int().optional(),
  sort_by: GetProjectsSortBy$inboundSchema.optional(),
  sort_direction: GetProjectsSortDirection$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "per_page": "perPage",
    "sort_by": "sortBy",
    "sort_direction": "sortDirection",
  });
});

/** @internal */
export type GetProjectsRequest$Outbound = {
  page?: number | undefined;
  per_page?: number | undefined;
  sort_by?: string | undefined;
  sort_direction?: number | undefined;
};

/** @internal */
export const GetProjectsRequest$outboundSchema: z.ZodType<
  GetProjectsRequest$Outbound,
  z.ZodTypeDef,
  GetProjectsRequest
> = z.object({
  page: z.number().int().optional(),
  perPage: z.number().int().optional(),
  sortBy: GetProjectsSortBy$outboundSchema.optional(),
  sortDirection: GetProjectsSortDirection$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    perPage: "per_page",
    sortBy: "sort_by",
    sortDirection: "sort_direction",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectsRequest$ {
  /** @deprecated use `GetProjectsRequest$inboundSchema` instead. */
  export const inboundSchema = GetProjectsRequest$inboundSchema;
  /** @deprecated use `GetProjectsRequest$outboundSchema` instead. */
  export const outboundSchema = GetProjectsRequest$outboundSchema;
  /** @deprecated use `GetProjectsRequest$Outbound` instead. */
  export type Outbound = GetProjectsRequest$Outbound;
}

export function getProjectsRequestToJSON(
  getProjectsRequest: GetProjectsRequest,
): string {
  return JSON.stringify(
    GetProjectsRequest$outboundSchema.parse(getProjectsRequest),
  );
}

export function getProjectsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetProjectsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectsRequest' from JSON`,
  );
}
