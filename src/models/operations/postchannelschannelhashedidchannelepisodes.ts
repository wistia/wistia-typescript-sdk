/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type PostChannelsChannelHashedIdChannelEpisodesRequest = {
  /**
   * The hashed ID of the channel to add the episode to.
   */
  channelHashedId: string;
  createChannelEpisode: models.CreateChannelEpisode;
};

/** @internal */
export const PostChannelsChannelHashedIdChannelEpisodesRequest$inboundSchema:
  z.ZodType<
    PostChannelsChannelHashedIdChannelEpisodesRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    channelHashedId: z.string(),
    CreateChannelEpisode: models.CreateChannelEpisode$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "CreateChannelEpisode": "createChannelEpisode",
    });
  });

/** @internal */
export type PostChannelsChannelHashedIdChannelEpisodesRequest$Outbound = {
  channelHashedId: string;
  CreateChannelEpisode: models.CreateChannelEpisode$Outbound;
};

/** @internal */
export const PostChannelsChannelHashedIdChannelEpisodesRequest$outboundSchema:
  z.ZodType<
    PostChannelsChannelHashedIdChannelEpisodesRequest$Outbound,
    z.ZodTypeDef,
    PostChannelsChannelHashedIdChannelEpisodesRequest
  > = z.object({
    channelHashedId: z.string(),
    createChannelEpisode: models.CreateChannelEpisode$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      createChannelEpisode: "CreateChannelEpisode",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostChannelsChannelHashedIdChannelEpisodesRequest$ {
  /** @deprecated use `PostChannelsChannelHashedIdChannelEpisodesRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostChannelsChannelHashedIdChannelEpisodesRequest$inboundSchema;
  /** @deprecated use `PostChannelsChannelHashedIdChannelEpisodesRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostChannelsChannelHashedIdChannelEpisodesRequest$outboundSchema;
  /** @deprecated use `PostChannelsChannelHashedIdChannelEpisodesRequest$Outbound` instead. */
  export type Outbound =
    PostChannelsChannelHashedIdChannelEpisodesRequest$Outbound;
}

export function postChannelsChannelHashedIdChannelEpisodesRequestToJSON(
  postChannelsChannelHashedIdChannelEpisodesRequest:
    PostChannelsChannelHashedIdChannelEpisodesRequest,
): string {
  return JSON.stringify(
    PostChannelsChannelHashedIdChannelEpisodesRequest$outboundSchema.parse(
      postChannelsChannelHashedIdChannelEpisodesRequest,
    ),
  );
}

export function postChannelsChannelHashedIdChannelEpisodesRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PostChannelsChannelHashedIdChannelEpisodesRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostChannelsChannelHashedIdChannelEpisodesRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostChannelsChannelHashedIdChannelEpisodesRequest' from JSON`,
  );
}
