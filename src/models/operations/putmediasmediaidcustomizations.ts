/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export const PutMediasMediaIdCustomizationsServerList = [
  "https://api.wistia.com/v1",
] as const;

export type PutMediasMediaIdCustomizationsRequest = {
  /**
   * The hashed ID of the video to be customized.
   */
  mediaId: string;
  videoCustomization: models.VideoCustomization;
};

/** @internal */
export const PutMediasMediaIdCustomizationsRequest$inboundSchema: z.ZodType<
  PutMediasMediaIdCustomizationsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "media-id": z.string(),
  VideoCustomization: models.VideoCustomization$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "media-id": "mediaId",
    "VideoCustomization": "videoCustomization",
  });
});

/** @internal */
export type PutMediasMediaIdCustomizationsRequest$Outbound = {
  "media-id": string;
  VideoCustomization: models.VideoCustomization$Outbound;
};

/** @internal */
export const PutMediasMediaIdCustomizationsRequest$outboundSchema: z.ZodType<
  PutMediasMediaIdCustomizationsRequest$Outbound,
  z.ZodTypeDef,
  PutMediasMediaIdCustomizationsRequest
> = z.object({
  mediaId: z.string(),
  videoCustomization: models.VideoCustomization$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    mediaId: "media-id",
    videoCustomization: "VideoCustomization",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutMediasMediaIdCustomizationsRequest$ {
  /** @deprecated use `PutMediasMediaIdCustomizationsRequest$inboundSchema` instead. */
  export const inboundSchema =
    PutMediasMediaIdCustomizationsRequest$inboundSchema;
  /** @deprecated use `PutMediasMediaIdCustomizationsRequest$outboundSchema` instead. */
  export const outboundSchema =
    PutMediasMediaIdCustomizationsRequest$outboundSchema;
  /** @deprecated use `PutMediasMediaIdCustomizationsRequest$Outbound` instead. */
  export type Outbound = PutMediasMediaIdCustomizationsRequest$Outbound;
}

export function putMediasMediaIdCustomizationsRequestToJSON(
  putMediasMediaIdCustomizationsRequest: PutMediasMediaIdCustomizationsRequest,
): string {
  return JSON.stringify(
    PutMediasMediaIdCustomizationsRequest$outboundSchema.parse(
      putMediasMediaIdCustomizationsRequest,
    ),
  );
}

export function putMediasMediaIdCustomizationsRequestFromJSON(
  jsonString: string,
): SafeParseResult<PutMediasMediaIdCustomizationsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PutMediasMediaIdCustomizationsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutMediasMediaIdCustomizationsRequest' from JSON`,
  );
}
