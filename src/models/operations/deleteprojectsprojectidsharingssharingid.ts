/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteProjectsProjectIdSharingsSharingIdRequest = {
  /**
   * Hashed ID of the project
   */
  projectId: string;
  /**
   * ID of the sharing to be deleted
   */
  sharingId: string;
};

/** @internal */
export const DeleteProjectsProjectIdSharingsSharingIdRequest$inboundSchema:
  z.ZodType<
    DeleteProjectsProjectIdSharingsSharingIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    projectId: z.string(),
    sharingId: z.string(),
  });

/** @internal */
export type DeleteProjectsProjectIdSharingsSharingIdRequest$Outbound = {
  projectId: string;
  sharingId: string;
};

/** @internal */
export const DeleteProjectsProjectIdSharingsSharingIdRequest$outboundSchema:
  z.ZodType<
    DeleteProjectsProjectIdSharingsSharingIdRequest$Outbound,
    z.ZodTypeDef,
    DeleteProjectsProjectIdSharingsSharingIdRequest
  > = z.object({
    projectId: z.string(),
    sharingId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteProjectsProjectIdSharingsSharingIdRequest$ {
  /** @deprecated use `DeleteProjectsProjectIdSharingsSharingIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteProjectsProjectIdSharingsSharingIdRequest$inboundSchema;
  /** @deprecated use `DeleteProjectsProjectIdSharingsSharingIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteProjectsProjectIdSharingsSharingIdRequest$outboundSchema;
  /** @deprecated use `DeleteProjectsProjectIdSharingsSharingIdRequest$Outbound` instead. */
  export type Outbound =
    DeleteProjectsProjectIdSharingsSharingIdRequest$Outbound;
}

export function deleteProjectsProjectIdSharingsSharingIdRequestToJSON(
  deleteProjectsProjectIdSharingsSharingIdRequest:
    DeleteProjectsProjectIdSharingsSharingIdRequest,
): string {
  return JSON.stringify(
    DeleteProjectsProjectIdSharingsSharingIdRequest$outboundSchema.parse(
      deleteProjectsProjectIdSharingsSharingIdRequest,
    ),
  );
}

export function deleteProjectsProjectIdSharingsSharingIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteProjectsProjectIdSharingsSharingIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteProjectsProjectIdSharingsSharingIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteProjectsProjectIdSharingsSharingIdRequest' from JSON`,
  );
}
