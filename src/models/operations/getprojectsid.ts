/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const GetProjectsIdServerList = [
  "https://api.wistia.com/v1",
] as const;

export type GetProjectsIdRequest = {
  /**
   * Project Hashed ID
   */
  id: string;
};

/** @internal */
export const GetProjectsIdRequest$inboundSchema: z.ZodType<
  GetProjectsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetProjectsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetProjectsIdRequest$outboundSchema: z.ZodType<
  GetProjectsIdRequest$Outbound,
  z.ZodTypeDef,
  GetProjectsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectsIdRequest$ {
  /** @deprecated use `GetProjectsIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetProjectsIdRequest$inboundSchema;
  /** @deprecated use `GetProjectsIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetProjectsIdRequest$outboundSchema;
  /** @deprecated use `GetProjectsIdRequest$Outbound` instead. */
  export type Outbound = GetProjectsIdRequest$Outbound;
}

export function getProjectsIdRequestToJSON(
  getProjectsIdRequest: GetProjectsIdRequest,
): string {
  return JSON.stringify(
    GetProjectsIdRequest$outboundSchema.parse(getProjectsIdRequest),
  );
}

export function getProjectsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetProjectsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectsIdRequest' from JSON`,
  );
}
