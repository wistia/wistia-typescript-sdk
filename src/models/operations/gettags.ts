/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Ordering
 */
export const GetTagsSortBy = {
  Name: "name",
  Created: "created",
  Updated: "updated",
  TaggingsCount: "taggingsCount",
} as const;
/**
 * Ordering
 */
export type GetTagsSortBy = ClosedEnum<typeof GetTagsSortBy>;

/**
 * Ordering Sort Direction (0 = desc, 1 = asc)
 */
export const GetTagsSortDirection = {
  Zero: 0,
  One: 1,
} as const;
/**
 * Ordering Sort Direction (0 = desc, 1 = asc)
 */
export type GetTagsSortDirection = ClosedEnum<typeof GetTagsSortDirection>;

export type GetTagsRequest = {
  /**
   * Page number to retrieve
   */
  page?: number | undefined;
  /**
   * Number of tags per page
   */
  perPage?: number | undefined;
  /**
   * Ordering
   */
  sortBy?: GetTagsSortBy | undefined;
  /**
   * Ordering Sort Direction (0 = desc, 1 = asc)
   */
  sortDirection?: GetTagsSortDirection | undefined;
};

/** @internal */
export const GetTagsSortBy$inboundSchema: z.ZodNativeEnum<
  typeof GetTagsSortBy
> = z.nativeEnum(GetTagsSortBy);

/** @internal */
export const GetTagsSortBy$outboundSchema: z.ZodNativeEnum<
  typeof GetTagsSortBy
> = GetTagsSortBy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTagsSortBy$ {
  /** @deprecated use `GetTagsSortBy$inboundSchema` instead. */
  export const inboundSchema = GetTagsSortBy$inboundSchema;
  /** @deprecated use `GetTagsSortBy$outboundSchema` instead. */
  export const outboundSchema = GetTagsSortBy$outboundSchema;
}

/** @internal */
export const GetTagsSortDirection$inboundSchema: z.ZodNativeEnum<
  typeof GetTagsSortDirection
> = z.nativeEnum(GetTagsSortDirection);

/** @internal */
export const GetTagsSortDirection$outboundSchema: z.ZodNativeEnum<
  typeof GetTagsSortDirection
> = GetTagsSortDirection$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTagsSortDirection$ {
  /** @deprecated use `GetTagsSortDirection$inboundSchema` instead. */
  export const inboundSchema = GetTagsSortDirection$inboundSchema;
  /** @deprecated use `GetTagsSortDirection$outboundSchema` instead. */
  export const outboundSchema = GetTagsSortDirection$outboundSchema;
}

/** @internal */
export const GetTagsRequest$inboundSchema: z.ZodType<
  GetTagsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.number().int().optional(),
  per_page: z.number().int().optional(),
  sort_by: GetTagsSortBy$inboundSchema.optional(),
  sort_direction: GetTagsSortDirection$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "per_page": "perPage",
    "sort_by": "sortBy",
    "sort_direction": "sortDirection",
  });
});

/** @internal */
export type GetTagsRequest$Outbound = {
  page?: number | undefined;
  per_page?: number | undefined;
  sort_by?: string | undefined;
  sort_direction?: number | undefined;
};

/** @internal */
export const GetTagsRequest$outboundSchema: z.ZodType<
  GetTagsRequest$Outbound,
  z.ZodTypeDef,
  GetTagsRequest
> = z.object({
  page: z.number().int().optional(),
  perPage: z.number().int().optional(),
  sortBy: GetTagsSortBy$outboundSchema.optional(),
  sortDirection: GetTagsSortDirection$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    perPage: "per_page",
    sortBy: "sort_by",
    sortDirection: "sort_direction",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTagsRequest$ {
  /** @deprecated use `GetTagsRequest$inboundSchema` instead. */
  export const inboundSchema = GetTagsRequest$inboundSchema;
  /** @deprecated use `GetTagsRequest$outboundSchema` instead. */
  export const outboundSchema = GetTagsRequest$outboundSchema;
  /** @deprecated use `GetTagsRequest$Outbound` instead. */
  export type Outbound = GetTagsRequest$Outbound;
}

export function getTagsRequestToJSON(getTagsRequest: GetTagsRequest): string {
  return JSON.stringify(GetTagsRequest$outboundSchema.parse(getTagsRequest));
}

export function getTagsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetTagsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetTagsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetTagsRequest' from JSON`,
  );
}
