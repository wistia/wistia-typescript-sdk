/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export const PostProjectsIdCopyServerList = [
  "https://api.wistia.com/v1",
] as const;

export type PostProjectsIdCopyRequestBody = {
  /**
   * The email address of the account Manager that will be the owner of the new project. Defaults to the Account Owner if invalid or omitted.
   */
  adminEmail?: string | undefined;
};

export type PostProjectsIdCopyRequest = {
  /**
   * Project Hashed ID
   */
  id: string;
  requestBody?: PostProjectsIdCopyRequestBody | undefined;
};

export type PostProjectsIdCopyResponse = {
  headers: { [k: string]: Array<string> };
  result: models.Project;
};

/** @internal */
export const PostProjectsIdCopyRequestBody$inboundSchema: z.ZodType<
  PostProjectsIdCopyRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  adminEmail: z.string().optional(),
});

/** @internal */
export type PostProjectsIdCopyRequestBody$Outbound = {
  adminEmail?: string | undefined;
};

/** @internal */
export const PostProjectsIdCopyRequestBody$outboundSchema: z.ZodType<
  PostProjectsIdCopyRequestBody$Outbound,
  z.ZodTypeDef,
  PostProjectsIdCopyRequestBody
> = z.object({
  adminEmail: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostProjectsIdCopyRequestBody$ {
  /** @deprecated use `PostProjectsIdCopyRequestBody$inboundSchema` instead. */
  export const inboundSchema = PostProjectsIdCopyRequestBody$inboundSchema;
  /** @deprecated use `PostProjectsIdCopyRequestBody$outboundSchema` instead. */
  export const outboundSchema = PostProjectsIdCopyRequestBody$outboundSchema;
  /** @deprecated use `PostProjectsIdCopyRequestBody$Outbound` instead. */
  export type Outbound = PostProjectsIdCopyRequestBody$Outbound;
}

export function postProjectsIdCopyRequestBodyToJSON(
  postProjectsIdCopyRequestBody: PostProjectsIdCopyRequestBody,
): string {
  return JSON.stringify(
    PostProjectsIdCopyRequestBody$outboundSchema.parse(
      postProjectsIdCopyRequestBody,
    ),
  );
}

export function postProjectsIdCopyRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PostProjectsIdCopyRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostProjectsIdCopyRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostProjectsIdCopyRequestBody' from JSON`,
  );
}

/** @internal */
export const PostProjectsIdCopyRequest$inboundSchema: z.ZodType<
  PostProjectsIdCopyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  RequestBody: z.lazy(() => PostProjectsIdCopyRequestBody$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type PostProjectsIdCopyRequest$Outbound = {
  id: string;
  RequestBody?: PostProjectsIdCopyRequestBody$Outbound | undefined;
};

/** @internal */
export const PostProjectsIdCopyRequest$outboundSchema: z.ZodType<
  PostProjectsIdCopyRequest$Outbound,
  z.ZodTypeDef,
  PostProjectsIdCopyRequest
> = z.object({
  id: z.string(),
  requestBody: z.lazy(() => PostProjectsIdCopyRequestBody$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostProjectsIdCopyRequest$ {
  /** @deprecated use `PostProjectsIdCopyRequest$inboundSchema` instead. */
  export const inboundSchema = PostProjectsIdCopyRequest$inboundSchema;
  /** @deprecated use `PostProjectsIdCopyRequest$outboundSchema` instead. */
  export const outboundSchema = PostProjectsIdCopyRequest$outboundSchema;
  /** @deprecated use `PostProjectsIdCopyRequest$Outbound` instead. */
  export type Outbound = PostProjectsIdCopyRequest$Outbound;
}

export function postProjectsIdCopyRequestToJSON(
  postProjectsIdCopyRequest: PostProjectsIdCopyRequest,
): string {
  return JSON.stringify(
    PostProjectsIdCopyRequest$outboundSchema.parse(postProjectsIdCopyRequest),
  );
}

export function postProjectsIdCopyRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostProjectsIdCopyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostProjectsIdCopyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostProjectsIdCopyRequest' from JSON`,
  );
}

/** @internal */
export const PostProjectsIdCopyResponse$inboundSchema: z.ZodType<
  PostProjectsIdCopyResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: models.Project$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type PostProjectsIdCopyResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: models.Project$Outbound;
};

/** @internal */
export const PostProjectsIdCopyResponse$outboundSchema: z.ZodType<
  PostProjectsIdCopyResponse$Outbound,
  z.ZodTypeDef,
  PostProjectsIdCopyResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: models.Project$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostProjectsIdCopyResponse$ {
  /** @deprecated use `PostProjectsIdCopyResponse$inboundSchema` instead. */
  export const inboundSchema = PostProjectsIdCopyResponse$inboundSchema;
  /** @deprecated use `PostProjectsIdCopyResponse$outboundSchema` instead. */
  export const outboundSchema = PostProjectsIdCopyResponse$outboundSchema;
  /** @deprecated use `PostProjectsIdCopyResponse$Outbound` instead. */
  export type Outbound = PostProjectsIdCopyResponse$Outbound;
}

export function postProjectsIdCopyResponseToJSON(
  postProjectsIdCopyResponse: PostProjectsIdCopyResponse,
): string {
  return JSON.stringify(
    PostProjectsIdCopyResponse$outboundSchema.parse(postProjectsIdCopyResponse),
  );
}

export function postProjectsIdCopyResponseFromJSON(
  jsonString: string,
): SafeParseResult<PostProjectsIdCopyResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostProjectsIdCopyResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostProjectsIdCopyResponse' from JSON`,
  );
}
