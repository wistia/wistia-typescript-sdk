/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetMediasMediaHashedIdRequest = {
  /**
   * The hashed ID of the media.
   */
  mediaHashedId: string;
};

/** @internal */
export const GetMediasMediaHashedIdRequest$inboundSchema: z.ZodType<
  GetMediasMediaHashedIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  mediaHashedId: z.string(),
});

/** @internal */
export type GetMediasMediaHashedIdRequest$Outbound = {
  mediaHashedId: string;
};

/** @internal */
export const GetMediasMediaHashedIdRequest$outboundSchema: z.ZodType<
  GetMediasMediaHashedIdRequest$Outbound,
  z.ZodTypeDef,
  GetMediasMediaHashedIdRequest
> = z.object({
  mediaHashedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMediasMediaHashedIdRequest$ {
  /** @deprecated use `GetMediasMediaHashedIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetMediasMediaHashedIdRequest$inboundSchema;
  /** @deprecated use `GetMediasMediaHashedIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetMediasMediaHashedIdRequest$outboundSchema;
  /** @deprecated use `GetMediasMediaHashedIdRequest$Outbound` instead. */
  export type Outbound = GetMediasMediaHashedIdRequest$Outbound;
}

export function getMediasMediaHashedIdRequestToJSON(
  getMediasMediaHashedIdRequest: GetMediasMediaHashedIdRequest,
): string {
  return JSON.stringify(
    GetMediasMediaHashedIdRequest$outboundSchema.parse(
      getMediasMediaHashedIdRequest,
    ),
  );
}

export function getMediasMediaHashedIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetMediasMediaHashedIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetMediasMediaHashedIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetMediasMediaHashedIdRequest' from JSON`,
  );
}
