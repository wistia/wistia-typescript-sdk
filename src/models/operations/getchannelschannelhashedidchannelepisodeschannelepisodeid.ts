/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest = {
  /**
   * The hashed ID of the channel.
   */
  channelHashedId: string;
  /**
   * The hashed ID of the channel episode.
   */
  channelEpisodeId: string;
};

/** @internal */
export const GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest$inboundSchema:
  z.ZodType<
    GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "channel-hashed-id": z.string(),
    "channel-episode-id": z.string(),
  }).transform((v) => {
    return remap$(v, {
      "channel-hashed-id": "channelHashedId",
      "channel-episode-id": "channelEpisodeId",
    });
  });

/** @internal */
export type GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest$Outbound =
  {
    "channel-hashed-id": string;
    "channel-episode-id": string;
  };

/** @internal */
export const GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest$outboundSchema:
  z.ZodType<
    GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest$Outbound,
    z.ZodTypeDef,
    GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest
  > = z.object({
    channelHashedId: z.string(),
    channelEpisodeId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      channelHashedId: "channel-hashed-id",
      channelEpisodeId: "channel-episode-id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest$ {
  /** @deprecated use `GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest$inboundSchema;
  /** @deprecated use `GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest$outboundSchema;
  /** @deprecated use `GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest$Outbound` instead. */
  export type Outbound =
    GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest$Outbound;
}

export function getChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequestToJSON(
  getChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest:
    GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest,
): string {
  return JSON.stringify(
    GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest$outboundSchema
      .parse(getChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest),
  );
}

export function getChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetChannelsChannelHashedIdChannelEpisodesChannelEpisodeIdRequest' from JSON`,
  );
}
