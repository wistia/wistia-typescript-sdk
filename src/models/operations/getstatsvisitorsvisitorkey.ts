/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const GetStatsVisitorsVisitorKeyServerList = [
  "https://api.wistia.com/v1",
] as const;

export type GetStatsVisitorsVisitorKeyRequest = {
  /**
   * The unique key of the visitor.
   */
  visitorKey: string;
};

/** @internal */
export const GetStatsVisitorsVisitorKeyRequest$inboundSchema: z.ZodType<
  GetStatsVisitorsVisitorKeyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "visitor-key": z.string(),
}).transform((v) => {
  return remap$(v, {
    "visitor-key": "visitorKey",
  });
});

/** @internal */
export type GetStatsVisitorsVisitorKeyRequest$Outbound = {
  "visitor-key": string;
};

/** @internal */
export const GetStatsVisitorsVisitorKeyRequest$outboundSchema: z.ZodType<
  GetStatsVisitorsVisitorKeyRequest$Outbound,
  z.ZodTypeDef,
  GetStatsVisitorsVisitorKeyRequest
> = z.object({
  visitorKey: z.string(),
}).transform((v) => {
  return remap$(v, {
    visitorKey: "visitor-key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetStatsVisitorsVisitorKeyRequest$ {
  /** @deprecated use `GetStatsVisitorsVisitorKeyRequest$inboundSchema` instead. */
  export const inboundSchema = GetStatsVisitorsVisitorKeyRequest$inboundSchema;
  /** @deprecated use `GetStatsVisitorsVisitorKeyRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetStatsVisitorsVisitorKeyRequest$outboundSchema;
  /** @deprecated use `GetStatsVisitorsVisitorKeyRequest$Outbound` instead. */
  export type Outbound = GetStatsVisitorsVisitorKeyRequest$Outbound;
}

export function getStatsVisitorsVisitorKeyRequestToJSON(
  getStatsVisitorsVisitorKeyRequest: GetStatsVisitorsVisitorKeyRequest,
): string {
  return JSON.stringify(
    GetStatsVisitorsVisitorKeyRequest$outboundSchema.parse(
      getStatsVisitorsVisitorKeyRequest,
    ),
  );
}

export function getStatsVisitorsVisitorKeyRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetStatsVisitorsVisitorKeyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetStatsVisitorsVisitorKeyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetStatsVisitorsVisitorKeyRequest' from JSON`,
  );
}
