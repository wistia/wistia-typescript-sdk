/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PostTagsServerList = [
  "https://api.wistia.com/v1",
] as const;

export type PostTagsRequest = {
  name: string;
};

/** @internal */
export const PostTagsRequest$inboundSchema: z.ZodType<
  PostTagsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type PostTagsRequest$Outbound = {
  name: string;
};

/** @internal */
export const PostTagsRequest$outboundSchema: z.ZodType<
  PostTagsRequest$Outbound,
  z.ZodTypeDef,
  PostTagsRequest
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostTagsRequest$ {
  /** @deprecated use `PostTagsRequest$inboundSchema` instead. */
  export const inboundSchema = PostTagsRequest$inboundSchema;
  /** @deprecated use `PostTagsRequest$outboundSchema` instead. */
  export const outboundSchema = PostTagsRequest$outboundSchema;
  /** @deprecated use `PostTagsRequest$Outbound` instead. */
  export type Outbound = PostTagsRequest$Outbound;
}

export function postTagsRequestToJSON(
  postTagsRequest: PostTagsRequest,
): string {
  return JSON.stringify(PostTagsRequest$outboundSchema.parse(postTagsRequest));
}

export function postTagsRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostTagsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostTagsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostTagsRequest' from JSON`,
  );
}
