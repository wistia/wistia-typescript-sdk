/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const GetMediasMediaIdCustomizationsServerList = [
  "https://api.wistia.com/v1",
] as const;

export type GetMediasMediaIdCustomizationsRequest = {
  /**
   * The hashed ID of the video.
   */
  mediaId: string;
};

/** @internal */
export const GetMediasMediaIdCustomizationsRequest$inboundSchema: z.ZodType<
  GetMediasMediaIdCustomizationsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "media-id": z.string(),
}).transform((v) => {
  return remap$(v, {
    "media-id": "mediaId",
  });
});

/** @internal */
export type GetMediasMediaIdCustomizationsRequest$Outbound = {
  "media-id": string;
};

/** @internal */
export const GetMediasMediaIdCustomizationsRequest$outboundSchema: z.ZodType<
  GetMediasMediaIdCustomizationsRequest$Outbound,
  z.ZodTypeDef,
  GetMediasMediaIdCustomizationsRequest
> = z.object({
  mediaId: z.string(),
}).transform((v) => {
  return remap$(v, {
    mediaId: "media-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMediasMediaIdCustomizationsRequest$ {
  /** @deprecated use `GetMediasMediaIdCustomizationsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetMediasMediaIdCustomizationsRequest$inboundSchema;
  /** @deprecated use `GetMediasMediaIdCustomizationsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetMediasMediaIdCustomizationsRequest$outboundSchema;
  /** @deprecated use `GetMediasMediaIdCustomizationsRequest$Outbound` instead. */
  export type Outbound = GetMediasMediaIdCustomizationsRequest$Outbound;
}

export function getMediasMediaIdCustomizationsRequestToJSON(
  getMediasMediaIdCustomizationsRequest: GetMediasMediaIdCustomizationsRequest,
): string {
  return JSON.stringify(
    GetMediasMediaIdCustomizationsRequest$outboundSchema.parse(
      getMediasMediaIdCustomizationsRequest,
    ),
  );
}

export function getMediasMediaIdCustomizationsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetMediasMediaIdCustomizationsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetMediasMediaIdCustomizationsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetMediasMediaIdCustomizationsRequest' from JSON`,
  );
}
