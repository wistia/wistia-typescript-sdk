/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export const GetBackgroundJobStatusBackgroundJobStatusIdServerList = [
  "https://api.wistia.com/v1",
] as const;

export type GetBackgroundJobStatusBackgroundJobStatusIdRequest = {
  /**
   * The numeric ID of the background job
   */
  backgroundJobStatusId: number;
};

/**
 * OK
 */
export type GetBackgroundJobStatusBackgroundJobStatusIdResponse = {
  /**
   * Status of the background job.
   */
  backgroundJobStatus: models.BackgroundJobStatus;
};

/** @internal */
export const GetBackgroundJobStatusBackgroundJobStatusIdRequest$inboundSchema:
  z.ZodType<
    GetBackgroundJobStatusBackgroundJobStatusIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "background-job-status-id": z.number().int(),
  }).transform((v) => {
    return remap$(v, {
      "background-job-status-id": "backgroundJobStatusId",
    });
  });

/** @internal */
export type GetBackgroundJobStatusBackgroundJobStatusIdRequest$Outbound = {
  "background-job-status-id": number;
};

/** @internal */
export const GetBackgroundJobStatusBackgroundJobStatusIdRequest$outboundSchema:
  z.ZodType<
    GetBackgroundJobStatusBackgroundJobStatusIdRequest$Outbound,
    z.ZodTypeDef,
    GetBackgroundJobStatusBackgroundJobStatusIdRequest
  > = z.object({
    backgroundJobStatusId: z.number().int(),
  }).transform((v) => {
    return remap$(v, {
      backgroundJobStatusId: "background-job-status-id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBackgroundJobStatusBackgroundJobStatusIdRequest$ {
  /** @deprecated use `GetBackgroundJobStatusBackgroundJobStatusIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetBackgroundJobStatusBackgroundJobStatusIdRequest$inboundSchema;
  /** @deprecated use `GetBackgroundJobStatusBackgroundJobStatusIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetBackgroundJobStatusBackgroundJobStatusIdRequest$outboundSchema;
  /** @deprecated use `GetBackgroundJobStatusBackgroundJobStatusIdRequest$Outbound` instead. */
  export type Outbound =
    GetBackgroundJobStatusBackgroundJobStatusIdRequest$Outbound;
}

export function getBackgroundJobStatusBackgroundJobStatusIdRequestToJSON(
  getBackgroundJobStatusBackgroundJobStatusIdRequest:
    GetBackgroundJobStatusBackgroundJobStatusIdRequest,
): string {
  return JSON.stringify(
    GetBackgroundJobStatusBackgroundJobStatusIdRequest$outboundSchema.parse(
      getBackgroundJobStatusBackgroundJobStatusIdRequest,
    ),
  );
}

export function getBackgroundJobStatusBackgroundJobStatusIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetBackgroundJobStatusBackgroundJobStatusIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetBackgroundJobStatusBackgroundJobStatusIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetBackgroundJobStatusBackgroundJobStatusIdRequest' from JSON`,
  );
}

/** @internal */
export const GetBackgroundJobStatusBackgroundJobStatusIdResponse$inboundSchema:
  z.ZodType<
    GetBackgroundJobStatusBackgroundJobStatusIdResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    background_job_status: models.BackgroundJobStatus$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "background_job_status": "backgroundJobStatus",
    });
  });

/** @internal */
export type GetBackgroundJobStatusBackgroundJobStatusIdResponse$Outbound = {
  background_job_status: models.BackgroundJobStatus$Outbound;
};

/** @internal */
export const GetBackgroundJobStatusBackgroundJobStatusIdResponse$outboundSchema:
  z.ZodType<
    GetBackgroundJobStatusBackgroundJobStatusIdResponse$Outbound,
    z.ZodTypeDef,
    GetBackgroundJobStatusBackgroundJobStatusIdResponse
  > = z.object({
    backgroundJobStatus: models.BackgroundJobStatus$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      backgroundJobStatus: "background_job_status",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBackgroundJobStatusBackgroundJobStatusIdResponse$ {
  /** @deprecated use `GetBackgroundJobStatusBackgroundJobStatusIdResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetBackgroundJobStatusBackgroundJobStatusIdResponse$inboundSchema;
  /** @deprecated use `GetBackgroundJobStatusBackgroundJobStatusIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetBackgroundJobStatusBackgroundJobStatusIdResponse$outboundSchema;
  /** @deprecated use `GetBackgroundJobStatusBackgroundJobStatusIdResponse$Outbound` instead. */
  export type Outbound =
    GetBackgroundJobStatusBackgroundJobStatusIdResponse$Outbound;
}

export function getBackgroundJobStatusBackgroundJobStatusIdResponseToJSON(
  getBackgroundJobStatusBackgroundJobStatusIdResponse:
    GetBackgroundJobStatusBackgroundJobStatusIdResponse,
): string {
  return JSON.stringify(
    GetBackgroundJobStatusBackgroundJobStatusIdResponse$outboundSchema.parse(
      getBackgroundJobStatusBackgroundJobStatusIdResponse,
    ),
  );
}

export function getBackgroundJobStatusBackgroundJobStatusIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetBackgroundJobStatusBackgroundJobStatusIdResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetBackgroundJobStatusBackgroundJobStatusIdResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetBackgroundJobStatusBackgroundJobStatusIdResponse' from JSON`,
  );
}
