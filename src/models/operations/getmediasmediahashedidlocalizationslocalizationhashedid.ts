/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest = {
  /**
   * The hashed ID of the localization's media.
   */
  mediaHashedId: string;
  /**
   * The hashed ID of the localization.
   */
  localizationHashedId: string;
  /**
   * Whether to include the transcript in the response.
   */
  includeTranscript?: boolean | undefined;
};

/** @internal */
export const GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest$inboundSchema:
  z.ZodType<
    GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "media-hashed-id": z.string(),
    "localization-hashed-id": z.string(),
    include_transcript: z.boolean().default(false),
  }).transform((v) => {
    return remap$(v, {
      "media-hashed-id": "mediaHashedId",
      "localization-hashed-id": "localizationHashedId",
      "include_transcript": "includeTranscript",
    });
  });

/** @internal */
export type GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest$Outbound =
  {
    "media-hashed-id": string;
    "localization-hashed-id": string;
    include_transcript: boolean;
  };

/** @internal */
export const GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest$outboundSchema:
  z.ZodType<
    GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest$Outbound,
    z.ZodTypeDef,
    GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest
  > = z.object({
    mediaHashedId: z.string(),
    localizationHashedId: z.string(),
    includeTranscript: z.boolean().default(false),
  }).transform((v) => {
    return remap$(v, {
      mediaHashedId: "media-hashed-id",
      localizationHashedId: "localization-hashed-id",
      includeTranscript: "include_transcript",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest$ {
  /** @deprecated use `GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest$inboundSchema;
  /** @deprecated use `GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest$outboundSchema;
  /** @deprecated use `GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest$Outbound` instead. */
  export type Outbound =
    GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest$Outbound;
}

export function getMediasMediaHashedIdLocalizationsLocalizationHashedIdRequestToJSON(
  getMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest:
    GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest,
): string {
  return JSON.stringify(
    GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest$outboundSchema
      .parse(getMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest),
  );
}

export function getMediasMediaHashedIdLocalizationsLocalizationHashedIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetMediasMediaHashedIdLocalizationsLocalizationHashedIdRequest' from JSON`,
  );
}
