/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetChannelsChannelHashedIdRequest = {
  /**
   * The hashed ID of the channel.
   */
  channelHashedId: string;
};

/** @internal */
export const GetChannelsChannelHashedIdRequest$inboundSchema: z.ZodType<
  GetChannelsChannelHashedIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "channel-hashed-id": z.string(),
}).transform((v) => {
  return remap$(v, {
    "channel-hashed-id": "channelHashedId",
  });
});

/** @internal */
export type GetChannelsChannelHashedIdRequest$Outbound = {
  "channel-hashed-id": string;
};

/** @internal */
export const GetChannelsChannelHashedIdRequest$outboundSchema: z.ZodType<
  GetChannelsChannelHashedIdRequest$Outbound,
  z.ZodTypeDef,
  GetChannelsChannelHashedIdRequest
> = z.object({
  channelHashedId: z.string(),
}).transform((v) => {
  return remap$(v, {
    channelHashedId: "channel-hashed-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChannelsChannelHashedIdRequest$ {
  /** @deprecated use `GetChannelsChannelHashedIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetChannelsChannelHashedIdRequest$inboundSchema;
  /** @deprecated use `GetChannelsChannelHashedIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetChannelsChannelHashedIdRequest$outboundSchema;
  /** @deprecated use `GetChannelsChannelHashedIdRequest$Outbound` instead. */
  export type Outbound = GetChannelsChannelHashedIdRequest$Outbound;
}

export function getChannelsChannelHashedIdRequestToJSON(
  getChannelsChannelHashedIdRequest: GetChannelsChannelHashedIdRequest,
): string {
  return JSON.stringify(
    GetChannelsChannelHashedIdRequest$outboundSchema.parse(
      getChannelsChannelHashedIdRequest,
    ),
  );
}

export function getChannelsChannelHashedIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetChannelsChannelHashedIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetChannelsChannelHashedIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetChannelsChannelHashedIdRequest' from JSON`,
  );
}
