/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as operations from "../operations/index.js";
import { WistiaError } from "./wistiaerror.js";

/**
 * Error due to reaching the video limit of your account or other issues.
 */
export type PostMultipartBadRequestErrorData = {
  error?: operations.PostMultipartError | undefined;
};

/**
 * Error due to reaching the video limit of your account or other issues.
 */
export class PostMultipartBadRequestError extends WistiaError {
  error?: operations.PostMultipartError | undefined;

  /** The original data that was passed to this error instance. */
  data$: PostMultipartBadRequestErrorData;

  constructor(
    err: PostMultipartBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    if (err.error != null) this.error = err.error;

    this.name = "PostMultipartBadRequestError";
  }
}

/** @internal */
export const PostMultipartBadRequestError$inboundSchema: z.ZodType<
  PostMultipartBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.lazy(() => operations.PostMultipartError$inboundSchema).optional(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new PostMultipartBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type PostMultipartBadRequestError$Outbound = {
  error?: operations.PostMultipartError$Outbound | undefined;
};

/** @internal */
export const PostMultipartBadRequestError$outboundSchema: z.ZodType<
  PostMultipartBadRequestError$Outbound,
  z.ZodTypeDef,
  PostMultipartBadRequestError
> = z.instanceof(PostMultipartBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.lazy(() => operations.PostMultipartError$outboundSchema)
      .optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostMultipartBadRequestError$ {
  /** @deprecated use `PostMultipartBadRequestError$inboundSchema` instead. */
  export const inboundSchema = PostMultipartBadRequestError$inboundSchema;
  /** @deprecated use `PostMultipartBadRequestError$outboundSchema` instead. */
  export const outboundSchema = PostMultipartBadRequestError$outboundSchema;
  /** @deprecated use `PostMultipartBadRequestError$Outbound` instead. */
  export type Outbound = PostMultipartBadRequestError$Outbound;
}
