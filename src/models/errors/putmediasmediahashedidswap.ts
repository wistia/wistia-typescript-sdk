/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { WistiaError } from "./wistiaerror.js";

/**
 * Bad request, e.g. missing replacement_media_id or media type mismatch.
 */
export type PutMediasMediaHashedIdSwapBadRequestErrorData = {
  error?: string | undefined;
};

/**
 * Bad request, e.g. missing replacement_media_id or media type mismatch.
 */
export class PutMediasMediaHashedIdSwapBadRequestError extends WistiaError {
  error?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: PutMediasMediaHashedIdSwapBadRequestErrorData;

  constructor(
    err: PutMediasMediaHashedIdSwapBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    if (err.error != null) this.error = err.error;

    this.name = "PutMediasMediaHashedIdSwapBadRequestError";
  }
}

/** @internal */
export const PutMediasMediaHashedIdSwapBadRequestError$inboundSchema: z.ZodType<
  PutMediasMediaHashedIdSwapBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.string().optional(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new PutMediasMediaHashedIdSwapBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type PutMediasMediaHashedIdSwapBadRequestError$Outbound = {
  error?: string | undefined;
};

/** @internal */
export const PutMediasMediaHashedIdSwapBadRequestError$outboundSchema:
  z.ZodType<
    PutMediasMediaHashedIdSwapBadRequestError$Outbound,
    z.ZodTypeDef,
    PutMediasMediaHashedIdSwapBadRequestError
  > = z.instanceof(PutMediasMediaHashedIdSwapBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutMediasMediaHashedIdSwapBadRequestError$ {
  /** @deprecated use `PutMediasMediaHashedIdSwapBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    PutMediasMediaHashedIdSwapBadRequestError$inboundSchema;
  /** @deprecated use `PutMediasMediaHashedIdSwapBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    PutMediasMediaHashedIdSwapBadRequestError$outboundSchema;
  /** @deprecated use `PutMediasMediaHashedIdSwapBadRequestError$Outbound` instead. */
  export type Outbound = PutMediasMediaHashedIdSwapBadRequestError$Outbound;
}
