/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * The status of the background job that's been queued for the request.
 */
export const BackgroundJobStatusStatus = {
  Queued: "queued",
  Started: "started",
  Finished: "finished",
  Failed: "failed",
} as const;
/**
 * The status of the background job that's been queued for the request.
 */
export type BackgroundJobStatusStatus = ClosedEnum<
  typeof BackgroundJobStatusStatus
>;

/**
 * Status of the background job.
 */
export type BackgroundJobStatus = {
  /**
   * The ID of the background job that's been queued for the request.
   */
  id: number;
  /**
   * The status of the background job that's been queued for the request.
   */
  status: BackgroundJobStatusStatus;
};

/** @internal */
export const BackgroundJobStatusStatus$inboundSchema: z.ZodNativeEnum<
  typeof BackgroundJobStatusStatus
> = z.nativeEnum(BackgroundJobStatusStatus);

/** @internal */
export const BackgroundJobStatusStatus$outboundSchema: z.ZodNativeEnum<
  typeof BackgroundJobStatusStatus
> = BackgroundJobStatusStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BackgroundJobStatusStatus$ {
  /** @deprecated use `BackgroundJobStatusStatus$inboundSchema` instead. */
  export const inboundSchema = BackgroundJobStatusStatus$inboundSchema;
  /** @deprecated use `BackgroundJobStatusStatus$outboundSchema` instead. */
  export const outboundSchema = BackgroundJobStatusStatus$outboundSchema;
}

/** @internal */
export const BackgroundJobStatus$inboundSchema: z.ZodType<
  BackgroundJobStatus,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
  status: BackgroundJobStatusStatus$inboundSchema,
});

/** @internal */
export type BackgroundJobStatus$Outbound = {
  id: number;
  status: string;
};

/** @internal */
export const BackgroundJobStatus$outboundSchema: z.ZodType<
  BackgroundJobStatus$Outbound,
  z.ZodTypeDef,
  BackgroundJobStatus
> = z.object({
  id: z.number().int(),
  status: BackgroundJobStatusStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BackgroundJobStatus$ {
  /** @deprecated use `BackgroundJobStatus$inboundSchema` instead. */
  export const inboundSchema = BackgroundJobStatus$inboundSchema;
  /** @deprecated use `BackgroundJobStatus$outboundSchema` instead. */
  export const outboundSchema = BackgroundJobStatus$outboundSchema;
  /** @deprecated use `BackgroundJobStatus$Outbound` instead. */
  export type Outbound = BackgroundJobStatus$Outbound;
}

export function backgroundJobStatusToJSON(
  backgroundJobStatus: BackgroundJobStatus,
): string {
  return JSON.stringify(
    BackgroundJobStatus$outboundSchema.parse(backgroundJobStatus),
  );
}

export function backgroundJobStatusFromJSON(
  jsonString: string,
): SafeParseResult<BackgroundJobStatus, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BackgroundJobStatus$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BackgroundJobStatus' from JSON`,
  );
}
