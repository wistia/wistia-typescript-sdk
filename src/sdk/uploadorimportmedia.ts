/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { uploadOrImportMediaPostForm } from "../funcs/uploadOrImportMediaPostForm.js";
import { uploadOrImportMediaPostMultipart } from "../funcs/uploadOrImportMediaPostMultipart.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class UploadOrImportMedia extends ClientSDK {
  /**
   * Upload or Import Media
   *
   * @remarks
   * Endpoint to upload media files from a local system or import from a web URL.
   *
   * - Use `multipart/form-data` with a `file` parameter to upload from local system
   * - Use `application/x-www-form-urlencoded` with a `url` parameter to import from web URL
   */
  async postMultipart(
    request?: operations.PostMultipartRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.PostMultipartResponse> {
    return unwrapAsync(uploadOrImportMediaPostMultipart(
      this,
      request,
      options,
    ));
  }

  /**
   * Upload or Import Media
   *
   * @remarks
   * Endpoint to upload media files from a local system or import from a web URL.
   *
   * - Use `multipart/form-data` with a `file` parameter to upload from local system
   * - Use `application/x-www-form-urlencoded` with a `url` parameter to import from web URL
   */
  async postForm(
    request?: operations.PostFormRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.PostFormResponse> {
    return unwrapAsync(uploadOrImportMediaPostForm(
      this,
      request,
      options,
    ));
  }
}
