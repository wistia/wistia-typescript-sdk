/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { statsEventsGetStatsEvents } from "../funcs/statsEventsGetStatsEvents.js";
import { statsEventsGetStatsEventsEventKey } from "../funcs/statsEventsGetStatsEventsEventKey.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class StatsEvents extends ClientSDK {
  /**
   * Stats:Events List
   *
   * @remarks
   * Retrieve a list of events. Please note that due to our data retention policy,
   * only events from the last 2 years are available.
   *
   * ## Requires api token with one of the following permissions
   * ```
   * Read, update & delete anything
   * Read all data
   * Read all project and video data
   * ```
   */
  async getStatsEvents(
    request?: operations.GetStatsEventsRequest | undefined,
    options?: RequestOptions,
  ): Promise<Array<models.Event>> {
    return unwrapAsync(statsEventsGetStatsEvents(
      this,
      request,
      options,
    ));
  }

  /**
   * Stats:Events Show
   *
   * @remarks
   * Retrieve information for a single event. Please note that due to our data retention policy,
   * only events from the last 2 years are available.
   *
   * ## Requires api token with one of the following permissions
   * ```
   * Read, update & delete anything
   * Read all data
   * Read all project and video data
   * ```
   */
  async getStatsEventsEventKey(
    request: operations.GetStatsEventsEventKeyRequest,
    options?: RequestOptions,
  ): Promise<models.Event> {
    return unwrapAsync(statsEventsGetStatsEventsEventKey(
      this,
      request,
      options,
    ));
  }
}
