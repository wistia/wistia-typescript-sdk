/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { channelsGetChannels } from "../funcs/channelsGetChannels.js";
import { channelsGetChannelsChannelHashedId } from "../funcs/channelsGetChannelsChannelHashedId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Channels extends ClientSDK {
  /**
   * Channels List
   *
   * @remarks
   * Returns all the Channels associated with the account.
   *
   * ## Requires api token with one of the following permissions
   * ```
   * Read, update & delete anything
   * Read all data
   * Read all project and video data
   * ```
   */
  async getChannels(
    request?: operations.GetChannelsRequest | undefined,
    options?: RequestOptions,
  ): Promise<Array<models.Channel>> {
    return unwrapAsync(channelsGetChannels(
      this,
      request,
      options,
    ));
  }

  /**
   * Channels Show
   *
   * @remarks
   * Returns the Channel associated with the hashedId.
   *
   * ## Requires api token with one of the following permissions
   * ```
   * Read, update & delete anything
   * Read all data
   * Read all project and video data
   * ```
   */
  async getChannelsChannelHashedId(
    request: operations.GetChannelsChannelHashedIdRequest,
    options?: RequestOptions,
  ): Promise<models.Channel> {
    return unwrapAsync(channelsGetChannelsChannelHashedId(
      this,
      request,
      options,
    ));
  }
}
