/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { tagsCreate } from "../funcs/tagsCreate.js";
import { tagsDelete } from "../funcs/tagsDelete.js";
import { tagsList } from "../funcs/tagsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Tags extends ClientSDK {
  /**
   * Tags List
   *
   * @remarks
   * Use this endpoint to request a list of Tags in your Wistia account. This request supports paging and sorting.
   *
   * ## Requires api token with one of the following permissions
   * ```
   * Read, update & delete anything
   * Read all data
   * ```
   */
  async list(
    request?: operations.GetTagsRequest | undefined,
    options?: RequestOptions,
  ): Promise<Array<models.Tag>> {
    return unwrapAsync(tagsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Tags Create
   *
   * @remarks
   * Create a new tag.
   *
   * ## Requires api token with one of the following permissions
   * ```
   * Read, update & delete anything
   * ```
   */
  async create(
    request: operations.PostTagsRequest,
    options?: RequestOptions,
  ): Promise<models.Tag> {
    return unwrapAsync(tagsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Tags Delete
   *
   * @remarks
   * Delete a tag
   *
   * ## Requires api token with one of the following permissions
   * ```
   * Read, update & delete anything
   * ```
   */
  async delete(
    request: operations.DeleteTagsNameRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(tagsDelete(
      this,
      request,
      options,
    ));
  }
}
